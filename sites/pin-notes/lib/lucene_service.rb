#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'lucene_service_types'

module LuceneService
  class Client
    include ::Thrift::Client

    def index(index_path)
      send_index(index_path)
      return recv_index()
    end

    def send_index(index_path)
      send_message('index', Index_args, :index_path => index_path)
    end

    def recv_index()
      result = receive_message(Index_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'index failed: unknown result')
    end

    def search(query)
      send_search(query)
      return recv_search()
    end

    def send_search(query)
      send_message('search', Search_args, :query => query)
    end

    def recv_search()
      result = receive_message(Search_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'search failed: unknown result')
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_index(seqid, iprot, oprot)
      args = read_args(iprot, Index_args)
      result = Index_result.new()
      result.success = @handler.index(args.index_path)
      write_result(result, oprot, 'index', seqid)
    end

    def process_search(seqid, iprot, oprot)
      args = read_args(iprot, Search_args)
      result = Search_result.new()
      result.success = @handler.search(args.query)
      write_result(result, oprot, 'search', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class Index_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    INDEX_PATH = 1

    FIELDS = {
      INDEX_PATH => {:type => ::Thrift::Types::STRING, :name => 'index_path'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Index_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::BOOL, :name => 'success'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Search_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    QUERY = 1

    FIELDS = {
      QUERY => {:type => ::Thrift::Types::STRING, :name => 'query'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Search_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

