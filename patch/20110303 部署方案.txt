数据库修改
  pin-user-auth
    增加了五个migrate 
      1 create_connect_users
      2 create_feeds
      3 create_messages
      4 modify_preferences
      5 set_default_messages_set_to_preferences
    
  pin-mev6
    增加了两个migrate
      1 add_email_to_history_records
      2 add_local_version_to_mindmaps
      
===========================================================      
redis 安装
  redis 要安装在 /web/2010/redis-2.0.4
  1 下载 redis 2.0.4 稳定版
  curl -O http://redis.googlecode.com/files/redis-2.0.4.tar.gz
  
  2 解压 
  tar xzf redis-2.0.4.tar.gz
   
  3 复制到 /web/2010
  cp -rf redis-2.0.4 /web/2010
  
  4 进入目录编译
  cd /web/2010/redis-2.0.4 && make
===============================================================
gem 安装
  1 gem oauth 0.4.4
    gem install oauth --version='0.4.4'
  2 redis-rb 2.1.1 gem 安装
    rubygems 上没有这个 gem
    从 https://github.com/ezmobius/redis-rb 下载 2.1.1 的源码生成gem 安装
    
  3 重新安装 pie-ui gem
    
==================================================================    
unicorn 脚本的修改
  1 增加 management 工程的 unicorn 脚本
    在 /web/2010 下 增加一个 unicorn_management.sh 脚本，内容参考虚拟机 /web1/unicorn_management.sh
    
  2 修改 /web/2010/unicorn_all.sh 和 /web/2010/unicorn.sh
    增加 mev6 工程的地址
    
========================================================================
nginx 配置文件修改
  1 去掉 ie6 检测
    去掉 
    #  if ($http_user_agent ~ MSIE){
    #    rewrite ^(.*)  http://dev.2009.mindpin.com$1 break;
    #  }

    去掉 三个旧工程的配置
    ei-server
    api-service-server
    mindmap-editor-2010-server
    
  2 mev6 的相关配置
    去掉mindmap-editor工程配置
    增加mev6 工程的配置

    使以前的导图编辑和查看地址重定向到新的地址
    server {
      listen 80;
      server_name dev.mindmap-editor.mindpin.com;
      rewrite ^(.*) http://dev.mev6.mindpin.com$1 redirect;
    }
  3 导图图片缓存增加多个域名
    把
    server {
      server_name mindmap-image-cache.mindpin.com;
    }
    改为
    server {
      server_name ~^mindmap-image-cache(-\d+)?\.mindpin\.com$
    }
    
====
worker 监视脚本
  需要把  /web/2010/pin-2010/worker_monitor.sh
  增加到 crontab 里
====
注意事项
  1 要先安装 redis 服务后，在安装reids的ruby gem
  2 做完以上步骤后，最后启动工程，服务，worker 时要注意
    用相应的脚本来启动这些工程，服务，worker

  



  
    
      

    